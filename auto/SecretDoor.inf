canGoThroughMe
You can only go through a SecretDoor when it's open

isConnectorApparent
A SecretDoor only functions as a TravelConnector when it's open

isOpenable
We can't use an OPEN command to open a SecretDoor, but by default we'll allow a CLOSE command to close it. To disallow this override isOpenable to nil

vocabWhenClosed
The vocab string (including the name) that applies to this SecretDoor when it's closed. If the SecretDoor starts out closed there's no need to define this explicitly as it will be copied from the vocab property at preInit. To define a SecretDoor that's effectively invisible when closed, give it a vocab property comprising an empty string (i.e. '', not nil); this will make it impossible for the player to refer to it when it's closed.

vocabWhenOpen
The vocab string (including the name) that applies to this SecretDoor when it's open. This might be somewhat different from that which applies when it's closed. For example, opening a bookcase might turn it into a passage or an opening. If you don't want to the vocab to change when this SecretDoor is opened and closed, leave vocabWhenOpen as nil.

makeOpen (stat)
Carry out opening or closing a SecretDoor

preinitThing ( )
Preinitialize a SecretDoor